# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["gcp"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.114.1
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      # Authenticating via Workload Identity Federation
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          create_credentials_file: 'true'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.SA_EMAIL }}'
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Print baseURL for Hugo
        run: |
          echo \
            "besepath will be set to: Current Repository: ${{ steps.pages.outputs.base_url }}"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify
      - name: Run pagefind
        run: npx pagefind --source public

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

      - name: Print File Contents
        run: |
            cat ${{ steps.auth.outputs.credentials_file_path }}   

      - name: 'gcloud'
        run: |-
          gcloud services list

#      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
#      - name: 'Set up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Deploy to VM
        uses: 'google-github-actions/ssh-compute@v0'
        with:
          instance_name: 'hatjump'
          zone: 'europe-central2-a'
          ssh_private_key: '${{ secrets.HATJUMP }}'
          command: 'echo Hello world'

      - name: test vm GCP deploy
        run: |-
          echo '${{ steps.compute-ssh.outputs.stdout }}'
          echo '${{ steps.compute-ssh.outputs.stderr }}'    

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2